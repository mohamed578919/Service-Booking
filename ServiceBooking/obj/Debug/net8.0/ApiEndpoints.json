[
  {
    "ContainingType": "ServiceBooking.Controllers.AccountController",
    "Method": "Login",
    "RelativePath": "api/Account/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userDTO",
        "Type": "ServiceBooking.DTOs.LoginDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ServiceBooking.Controllers.AccountController",
    "Method": "Register",
    "RelativePath": "api/Account/Register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userdto",
        "Type": "ServiceBooking.DTOs.RegisterUserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ServiceBooking.Controllers.AccountController",
    "Method": "VerifyCode",
    "RelativePath": "api/Account/verify",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "ServiceBooking.DTOs.VerifyCodeDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AdminController",
    "Method": "GetComplaints",
    "RelativePath": "api/Admin/complaints",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AdminController",
    "Method": "UpdateComplaintStatus",
    "RelativePath": "api/Admin/complaints/{complaintId}/update-status",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "complaintId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "status",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AdminController",
    "Method": "ApproveProvider",
    "RelativePath": "api/Admin/providers/{providerId}/approve",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "providerId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AdminController",
    "Method": "RejectProvider",
    "RelativePath": "api/Admin/providers/{providerId}/reject",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "providerId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AdminController",
    "Method": "GetPendingProviders",
    "RelativePath": "api/Admin/providers/pending",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AdminController",
    "Method": "GetAllRequests",
    "RelativePath": "api/Admin/requests",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AdminController",
    "Method": "DeleteRequest",
    "RelativePath": "api/Admin/requests/{requestId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "requestId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AdminController",
    "Method": "GetStatistics",
    "RelativePath": "api/Admin/statistics",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ServiceBooking.Controllers.ApplicationsController",
    "Method": "ApplyToRequest",
    "RelativePath": "api/Applications/apply",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "ServiceBooking.DTOs.ApplicationDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ServiceBooking.Controllers.ApplicationsController",
    "Method": "GetMyApplications",
    "RelativePath": "api/Applications/my-applications",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ServiceBooking.Controllers.ApplicationsController",
    "Method": "GetApplicationsForRequest",
    "RelativePath": "api/Applications/request/{requestId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "requestId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ServiceBooking.Controllers.ClientController",
    "Method": "GetApplicationsForMyRequests",
    "RelativePath": "api/Client/ApplicationsForMyRequests",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ServiceBooking.Controllers.ClientController",
    "Method": "CreateRequest",
    "RelativePath": "api/Client/CreateRequest",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "requestDto",
        "Type": "ServiceBooking.Models.Request",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ServiceBooking.Controllers.ClientController",
    "Method": "DeleteRequest",
    "RelativePath": "api/Client/DeleteRequest/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ServiceBooking.Controllers.ClientController",
    "Method": "GetMyRequests",
    "RelativePath": "api/Client/MyRequests",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ServiceBooking.Controllers.ClientController",
    "Method": "UpdateRequest",
    "RelativePath": "api/Client/UpdateRequest/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedRequest",
        "Type": "ServiceBooking.Models.Request",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ServiceBooking.Controllers.ComplaintController",
    "Method": "Create",
    "RelativePath": "api/Complaint",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "ServiceBooking.DTOs.ComplaintCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ServiceBooking.Controllers.ComplaintController",
    "Method": "MyComplaints",
    "RelativePath": "api/Complaint/my",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ServiceBooking.Controllers.ProviderController",
    "Method": "GetProviderApplications",
    "RelativePath": "api/Provider/{providerId}/applications",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "providerId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ServiceBooking.Models.Application, ServiceBooking, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ServiceBooking.Controllers.ProviderController",
    "Method": "ApplyForRequest",
    "RelativePath": "api/Provider/{providerId}/apply/{requestId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "providerId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "requestId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ServiceBooking.Controllers.ProviderController",
    "Method": "GetAvailableRequests",
    "RelativePath": "api/Provider/{providerId}/available-requests",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "providerId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RequestController",
    "Method": "Create",
    "RelativePath": "api/Request",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "ServiceBooking.DTOs.RequestCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RequestController",
    "Method": "GetById",
    "RelativePath": "api/Request/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RequestController",
    "Method": "Update",
    "RelativePath": "api/Request/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "ServiceBooking.DTOs.RequestUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RequestController",
    "Method": "Delete",
    "RelativePath": "api/Request/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RequestController",
    "Method": "GetApplications",
    "RelativePath": "api/Request/{id}/applications",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RequestController",
    "Method": "MyRequests",
    "RelativePath": "api/Request/my-requests",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ServiceBooking.Controllers.ServiceController",
    "Method": "Create",
    "RelativePath": "api/Service",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "ServiceBooking.DTOs.ServiceCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ServiceBooking.DTOs.ServiceDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ServiceBooking.Controllers.ServiceController",
    "Method": "GetById",
    "RelativePath": "api/Service/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ServiceBooking.DTOs.ServiceDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ServiceBooking.Controllers.ServiceController",
    "Method": "Update",
    "RelativePath": "api/Service/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "ServiceBooking.DTOs.ServiceUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ServiceBooking.DTOs.ServiceDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ServiceBooking.Controllers.ServiceController",
    "Method": "Delete",
    "RelativePath": "api/Service/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ServiceBooking.Controllers.ServiceController",
    "Method": "GetMine",
    "RelativePath": "api/Service/mine",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ServiceBooking.DTOs.ServiceDto, ServiceBooking, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ServiceBooking.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ServiceBooking.WeatherForecast, ServiceBooking, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]